#!/usr/bin/env ruby
#
# Create cscope database for project files
#
# Usage:
#   create_cstags    # Generate cscope.out database in current directory
#
# This script generates a cscope database (cscope.out) by collecting all
# project files and building an index for efficient cross-reference searching.
# It uses bundle paths and project roots to determine which files to include.
#
# Requires:
#   - cscope command-line tool
#
# The script will:
#   1. Collect all files from project roots (including bundle paths)
#   2. Generate cscope.out database with cross-references
#   3. Show progress using infobar visualization
#   4. Report the size of the created database

require 'utils'
require 'infobar'

config = Utils::ConfigFile.new
config.configure_from_paths

roots = %w[ . ] + `bundle list --paths`.lines.map(&:chomp)

IO.popen('cscope 2>/dev/null -R -b -i - -f cscope.out', 'w') do |scope|
  finder = Utils::Finder.new(
    pattern: '',
    roots:   roots,
    config:  config,
  )
  finder.search.paths.with_infobar(label: 'Collecting files') do |path|
    scope.puts path
    +infobar
  end

  infobar.newline
  Infobar.busy(label: 'Creating cstags', frames: :braille7) do
    scope.close
  end
end

if megabytes = File.size('cscope.out').to_f / 1024 ** 2 rescue nil
  infobar.puts 'Created %.3fM of cstags.' % megabytes
end
