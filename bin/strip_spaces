#!/usr/bin/env ruby

require 'spruz/secure_write'
include Spruz::SecureWrite
require 'utils'
include Utils::Find

class ::File
  include Utils::FileXt
end

pathes = ARGV.empty? ?  %w[.] : ARGV
pathes = pathes.map { |p| File.expand_path(p) }

config = Utils::Config::ConfigFile.new
config.parse_config_file File.expand_path('~/.utilsrc')

find(*pathes) do |filename|
  bn, s = File.basename(filename), File.stat(filename)
  if s.directory?
    config.strip_spaces.prune?(bn) and prune
    next
  end
  config.strip_spaces.skip?(bn) and next
  File.ascii?(filename) or next
  STDOUT.puts "Stripping spaces from #{filename.inspect}."
  secure_write(filename) do |output|
    File.open(filename) do |file|
      old_mode = file.stat.mode
      file.each do |line|
        line.gsub!(/[ \t\v]+$/, '')
        output.write line
      end
      File.chmod old_mode, output.path
    end
  end
end
