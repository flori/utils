#!/usr/bin/env ruby
#
# YAML Validator - Checks YAML syntax correctness
#
# This script validates YAML files or stdin input for proper syntax.
# It uses YAML.unsafe_load which can execute arbitrary Ruby code, so
# use with caution on untrusted input.
#
# Usage:
#   yaml_check <filename>     # Validate a file
#   cat file.yaml | yaml_check # Validate from stdin
#
# Options:
#   DEBUG=1                     # Enable verbose output with parsed YAML
#
# Output:
#   'ok' - if YAML is valid
#   'nak' - if YAML is invalid
#   Error messages to STDERR with line/column information
#
# Examples:
#   ./yaml_check config.yaml
#   echo "name: John" | ./yaml_check
#   DEBUG=1 ./yaml_check data.yaml
#

require 'yaml'

format = -> s {
  if /^\((?<f>[^)]+)\):\ (?<m>.*?) at line (?<l>\d+) column (?<c>\d+)/ =~ s
    [ f, l, c, m ] * ?:
  else
    s
  end
}

if filename = ARGV.first
  begin
    yaml = YAML.unsafe_load_file(filename).to_yaml
    ENV['DEBUG'].to_i == 1 and puts yaml
    puts 'ok'
  rescue => e
    STDERR.puts format.(e.message)
    puts 'nak'
    exit 1
  end
else
  string = STDIN.read
  begin
    yaml = YAML.unsafe_load(string).to_yaml
    ENV['DEBUG'].to_i == 1 and puts yaml
    puts 'ok'
  rescue => e
    STDERR.puts format.(e.message)
    puts 'nak'
    exit 1
  end
end
